syntax = "proto3";
package mercury.mercury;

import "gogoproto/gogo.proto";

option go_package = "mercury/x/mercury/types";

enum ProviderStatus {
  Offline = 0;
  Online =  1;
}

message Provider {
  string pub_key = 1 [(gogoproto.casttype) = "mercury/common.PubKey"];
  string chain = 2 [(gogoproto.casttype) = "mercury/common.Chain"];
  string metadata_uri = 3;
  uint64 metadata_nonce = 4;
  ProviderStatus type = 5;
  uint64 max_contract_duration = 6;
  uint64 subscription_rate = 7;
  uint64 pay_as_you_go_rate = 8;
  uint64 bond = 9;
}

enum ContractType {
  Subscription = 0;
  PayAsYouGo =  1;
}

message Contract {
  string provider_pub_key = 1 [(gogoproto.casttype) = "mercury/common.PubKey"];
  string chain = 2 [(gogoproto.casttype) = "mercury/common.Chain"];
  bytes  client_address = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  ContractType type = 4;
  uint64 rate = 5;
  uint64 duration = 6;
}
